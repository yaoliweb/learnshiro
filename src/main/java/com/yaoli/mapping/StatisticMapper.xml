<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaoli.dao.StatisticMapper" >
  <resultMap id="BaseResultMap" type="com.yaoli.beans.Statistic" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sewageid" property="sewageid" jdbcType="INTEGER" />
    <result column="testingtime" property="testingtime" jdbcType="TIMESTAMP" />
    <result column="waterflow" property="waterflow" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sewageid, testingtime, waterflow
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from statistic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from statistic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yaoli.beans.Statistic" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into statistic (sewageid, testingtime, waterflow
      )
    values (#{sewageid,jdbcType=INTEGER}, #{testingtime,jdbcType=TIMESTAMP}, #{waterflow,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yaoli.beans.Statistic" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into statistic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sewageid != null" >
        sewageid,
      </if>
      <if test="testingtime != null" >
        testingtime,
      </if>
      <if test="waterflow != null" >
        waterflow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sewageid != null" >
        #{sewageid,jdbcType=INTEGER},
      </if>
      <if test="testingtime != null" >
        #{testingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="waterflow != null" >
        #{waterflow,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaoli.beans.Statistic" >
    update statistic
    <set >
      <if test="sewageid != null" >
        sewageid = #{sewageid,jdbcType=INTEGER},
      </if>
      <if test="testingtime != null" >
        testingtime = #{testingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="waterflow != null" >
        waterflow = #{waterflow,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaoli.beans.Statistic" >
    update statistic
    set sewageid = #{sewageid,jdbcType=INTEGER},
      testingtime = #{testingtime,jdbcType=TIMESTAMP},
      waterflow = #{waterflow,jdbcType=NUMERIC}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getTotalCount" resultType="java.lang.Integer" >
    select count(*) from statistic
  </select>
  <select id="getCountByParameterName" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select count(#{parameter}) from statistic
  </select>
  <select id="selectByPaingAndCondition" resultMap="BaseResultMap" parameterType="hashmap" >
    		SELECT TOP ${pageSize} * 
			 FROM  (
				 SELECT ROW_NUMBER() OVER (ORDER BY id) AS RowNumber,* FROM (
					 <include refid="selectByPaingAndConditionSQL"></include>
				 ) as b
			 ) as A 
		 WHERE RowNumber > ${pageSize} * (${pageNum} - 1) 

  </select>
  <sql id="selectByPaingAndConditionSQL" >
    select top 100 percent id,sewageid,testingtime,waterflow from statistic where 1=1 
  </sql>
  
  <!-- 执行统计昨天的数量程序 -->
  <insert id="executeStatisticYesterday" parameterType="java.lang.Integer">
	insert into statistic 
	select #{id} as sewageid,hourname,waterflow from (
		select sum(temp1.detection6) as waterflow,hourname from 
		(
		  select detection_data.*,convert(datetime,convert(varchar(13),testingtime,120)+':00:00',120) as hourname from detection_data 
		  where CONVERT(varchar(12),GETDATE()-1,111) = CONVERT(varchar(12),detection_data.testingtime,111) and detection_data.sewageid = #{id}
		)as temp1 group by hourname
	) as temp2	
  </insert> 
</mapper>